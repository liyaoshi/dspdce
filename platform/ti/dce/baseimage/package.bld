/*
 *  ======== WTSD_DucatiMMSW/platform/baseimage/package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');
var compileOpts = " "
var waval = 0;

var commonBld = xdc.loadCapsule("../build/common.bld");

var SRC_FILES_APP = [
     "main.c",
     "ping_tasks.c"
     
 ];

var SRC_FILES_SYS = [
];

coreNames = commonBld.getCores(arguments);
/* select default as dsp */
if (coreNames.length==0) {
    coreNames[0] = "dsp";
}

var profiles  = commonBld.getProfiles(arguments);
/* If no profiles were assigned, build for release */
if (profiles.length == 0) {
    profiles[0] = "release";
}


for (var i = 0; i < Build.targets.length; i++) {

    var targ = Build.targets[i];

    for (var j = 0; j < coreNames.length; j++) {
        var coreName = coreNames[j];

        var cfgFileName = 'dce_' + coreName + '.cfg';

        if(coreName.match(/dsp/)){
            var SRC_FILES = SRC_FILES_APP;
        }

        for( var k = 0; k< profiles.length; k++)
        {
            var profile        = profiles[k];
            var profileOpts    = commonBld.buildOptions(arguments, compileOpts, coreName);


            var out_name = 'out/' + coreName + '/' + profile + '/' + coreName;

            print ("config file: " + cfgFileName + "\n");
            print ("profile: " + profile + "\n");
            print(profileOpts+"\r\n");
            print("HwType = " + HwType);
            print("HwVer = " + HwVer);
            var exe = Pkg.addExecutable(out_name, targ, targ.platform, {cfgScript:cfgFileName, profile:profile, copts: profileOpts, cfgArgs:"{HwType:" + HwType + "}" });

            exe.addObjects(SRC_FILES);

        }
    }
}


